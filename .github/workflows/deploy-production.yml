name: Deploy to Production (Hostinger VPS)

on:
  push:
    branches:
      - production
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to Hostinger VPS via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          password: ${{ secrets.VPS_PASSWORD }}
          port: 22
          script: |
            echo "Starting deployment for vendy-buildr..."

            # Define project directory
            PROJECT_DIR="/var/www/vendy-buildr"
            REPO_URL="https://github.com/mayurbagewadi/vendy-buildr.git"
            BRANCH="production"

            # Create project directory if it doesn't exist
            if [ ! -d "$PROJECT_DIR" ]; then
              echo "Creating project directory..."
              mkdir -p $PROJECT_DIR
            fi

            cd $PROJECT_DIR

            # Fix git ownership issue
            git config --global --add safe.directory $PROJECT_DIR

            # Clone or pull the repository
            if [ ! -d ".git" ]; then
              echo "Cloning repository..."
              git clone -b $BRANCH $REPO_URL . || { echo "Git clone failed!"; exit 1; }
            else
              echo "Pulling latest changes..."
              git fetch origin $BRANCH || { echo "Git fetch failed!"; exit 1; }
              git reset --hard origin/$BRANCH || { echo "Git reset failed!"; exit 1; }
              git clean -fd
            fi

            echo "Current commit: $(git rev-parse HEAD)"
            echo "Current branch: $(git branch --show-current)"

            # Install dependencies
            echo "Installing dependencies..."
            npm ci --production=false || { echo "npm install failed!"; exit 1; }

            # Build the project
            echo "Building project..."
            npm run build || { echo "Build failed!"; exit 1; }

            # Verify build output
            if [ ! -f "dist/index.html" ]; then
              echo "ERROR: dist/index.html not found after build!"
              exit 1
            fi

            echo "Build successful! Checking dist/index.html:"
            head -20 dist/index.html

            # Set correct permissions
            echo "Setting permissions..."
            chown -R www-data:www-data $PROJECT_DIR
            chmod -R 755 $PROJECT_DIR

            # Setup/reload Nginx with subdomain support
            echo "Setting up Nginx configuration with subdomain support..."
            cat > /etc/nginx/sites-available/vendy-buildr << 'EOF'
            # Redirect HTTP to HTTPS (if SSL is configured)
            # server {
            #     listen 80;
            #     listen [::]:80;
            #     server_name yesgive.shop *.yesgive.shop;
            #     return 301 https://\$host\$request_uri;
            # }

            # Main server block (HTTP for now, HTTPS when SSL is ready)
            server {
                listen 80;
                listen [::]:80;

                # Wildcard domain to catch all subdomains
                server_name yesgive.shop *.yesgive.shop;

                root /var/www/vendy-buildr/dist;
                index index.html;

                # Logs
                access_log /var/log/nginx/yesgive-access.log;
                error_log /var/log/nginx/yesgive-error.log;

                # Gzip compression
                gzip on;
                gzip_types text/plain text/css application/json application/javascript text/xml application/xml text/javascript;

                # Static assets with caching
                location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
                    expires 1y;
                    add_header Cache-Control "public, immutable";
                }

                # SPA fallback - CRITICAL FOR REACT ROUTER AND SUBDOMAIN ROUTING
                location / {
                    try_files \$uri \$uri/ /index.html;
                    add_header Cache-Control "no-cache, no-store, must-revalidate";
                }

                # Security headers
                add_header X-Frame-Options "DENY" always;
                add_header X-Content-Type-Options "nosniff" always;
                add_header Referrer-Policy "strict-origin-when-cross-origin" always;
            }
            EOF

            # Enable the site
            ln -sf /etc/nginx/sites-available/vendy-buildr /etc/nginx/sites-enabled/vendy-buildr

            # Remove default site if exists
            rm -f /etc/nginx/sites-enabled/default

            # Test and reload Nginx
            nginx -t && systemctl reload nginx || { echo "Nginx configuration test failed!"; exit 1; }

            echo "Deployment completed successfully!"
            echo "Site is live at: http://yesgive.shop"
